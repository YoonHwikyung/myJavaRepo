package com.kh.chap01_Abstraction.run; //객채

import com.kh.chap01_Abstraction.model.vo.Student;

public class AbstractionRun {
	
	/*
	 * 1. 객체지향언어 : "객체"를 "지향"하는 언어로 "객체 중심"으로 돌아간다고 생각하면 됨
	 * 
	 * 2. 객체란 : 사전적 의미로 현실세계에 독립적으로 존재(목적이 있고 의미가 있는)하는 모든것들을 의미 (유형, 무형, 사물, 개념..)
	 * 
	 * 3. 객체지향 프로그래밍 : 즉, 현실세계의 어떤 독립적인 존재들(객체) 간의 상호작용 --> 프로그래밍을 통해 가상세계(코드)로 구현하는 과정
	 * 
	 * 4. 구현하고자 하는 프로그램 상의 필요한 객체를 만들기 위해서 (즉, 생성하기 위해서) 
	 *    : 클래스라는 틀을 먼저 만들어내야됨! (각 객체들의 속성(정보)들을 담아내는 그릇과도 같은 존재)
	 *      어떻게? --> 추상화 + 캡슐화 접목해서
	 *      
	 * 5. 추상화 과정
	 *    1) 내가 구현하고자 하는 프로그램에서 필요한 객체들을 생각해 볼 것
	 *    2) 그 객체들이 가지고 있는 공통적인 속성, 기능들을 모두 추출할 것 (100개가 됏든 ..)
	 *    3) 그렇게 추출된 것들을 가지고 내가 구현하고자 하는 프로그램의 "실질적인 목적"에 맞춰 불필요한 속성, 기능들을 제거해나감
	 *    4) 최종적으로 추려진 속성들을 가지고 어떤 자료형으로, 어떤 변수명으로 사용할건지 생각
	 *    
	 *       ex1) 학생관리 프로그램
	 *            1) 학생관련 객체 (홍길동학생, 김영희학생, 홍길녀학생, 강개순학생...)
	 *            2) 공통적인 속성 및 기능(이름, 나이, 주소, 전화번호, 키, 달리기 속도, 학년, 반, 국어점수, 수학점수, 영어점수, 몸무게, 머리색깔, 발사이즈, 먹는다, 잔다, 응가한다, ...)
	 * 	  3) 학생 "인적사항"을 관리하는 프로그램이라고 한다면 : 이름, 나이, 주소, 전화번호, 학년, 반
	 * 	     학생 "성적"을 관리하는 프로그램이라고 한다면 : 이름, 학년, 반, 국어점수, 수학점수, 영어점수 
	 * 	     학생 "건강"을 관리하는 프로그램이라고 한다면 : 이름, 학년, 반, 키, 달리기 속도, 몸무게, 먹는다, 응가한다
	 * 			  	
	 * 	     최종적으로 추려진 속성이 이름, 나이, 키 가정하에
	 * 	  4) 이름 --> String name;
	 * 	      나이 --> int age;
	 * 	      키 --> double height;
	 * 
	 * 6. 위에서 선정된것들을 가지고 본격적으로 프로그래밍을 할껀데...
	 * 
	 *    1) "변수" 만으로 프로그램을 구현하게 된다면?
	 *    
	 *       * 변수 - 하나의 자료형에 하나의 값만을 보관할 수 있음
	 *       
	 *       홍길동 객체를 만들기위해서 --> String name1 = "홍길동"; int age1 = 20; double height1 = 162.3;
	 *       김말똥 객체를 만들기위해서 --> String name2 = "김말똥"; int age2 = 21; double height2 = 173.4;
	 *       강개순 객체를 만들기위해서 --> String name3 = "강개순"; int age3 = 32; double height3 = 182.7;
	 *       ....
	 * 
	 * 	--> 어떤 문제가 발생? --> 수백명의 학생들을 관리하는 프로그램을 구현해야된다면 --> 수천개의 변수가 생겨날꺼임.. 관리하기 어려움
	 * 
	 *     2) "배열" 만으로 프로그램을 구현하게 된다면?
	 * 
	 * 	* 배열 - 하나의 자료형에 여러개의 값들을 보관할 수 있음
	 * 
	 * 	학생들의 이름들을 보관하는 	String[] name = {"홍길동", "김말똥", "강개순", ...}
	 * 	학생들의 나이들을 보관하는		   int[] age  = {  20  ,    21  ,   32  , ...}
	 * 	학생들의   키 들을 보관하는    double[] height = { 162.3,  173.4 , 182.7 , ...}
	 * 
	 * 	--> 어떤 문제가 발생? --> 한명이 전학가게 된다면 해당 학생의 인덱스를 찾아서 일일히 name, age, height배열가서 지워줘야 되는데
	 * 				실수해가지고 하나의 배열에서 값지우지 못한다면 문제 발생
	 * 			    --> 새로운 학생이 오게되면 새로운 정보를 배열에 추가해줘야되는데 크기변경 불가(배열의특징)
	 *   
	 *     3) 그래서 나온 개념이 "구조체"의 개념이다!!
	 * 
	 *        * 구조체 - 여러개의 자료형의 여러개의 값들을 보관할 수 있는 배열같은 형태 (내가 직접 자료형을 만들꺼임 == 클래스)
	 *        
	 *        String값도 보관하고, int값도 보관하고, double값도 같이 보관할 수 있도록 나만의 배열같은 자료형 만들꺼임!! 그게 바로 클래스!
	 *            
	 *        Student 클래스(학생객체들을 찍어낼수있는 틀)를 만들어서 
	 *        그 안에 필드라는 걸로 String name, int age, double height를 정의 해놓을 꺼임!       
	 *               
	 *               
	 */
	
	public static void main(String[] args) {
		
		
		// 배열 생성
		int[] arr = new int[3];
		//배열 대입
		arr[0] = 10;
		arr[1] = 10;
		arr[2] = 10;
		
		// 홍길동 객체를 만들어보자
		// 1. 객체를 찍어내기 위해서는
		//	  new 키워드를 통해 객체 생성 (즉, 공간할당)
		//	    클래스명 변수명 = new 클래스명();
		Student hong = new Student(); // 다른 클래스에 있으니 불러오기 위해  선언해줘야한다.
		
		// 2. 각 필드에 접근해서 값 대입
		hong.name = "홍길동"; // 직접적으로 찾아가서 담는 방법. 인덱스라는 개념 없기 때문!
		hong.age = 20;
		hong.height = 162.3;
		// => 홍길동이라는 객체를 관리하기 위해 hong이라는 하나의 객체에 이름, 나이, 키를 담았다!
		
		// 김말똥 객체를 만들어보자
		Student ddong = new Student(); // 공간할당. 필드부에 작성된 크기만큼 크기가 할당된다.
		
		ddong.name = "김말똥";
		ddong.age = 21;
		ddong.height = 173.4;
		// 김말똥 객체를 관리하기 위해 ddong이라는 하나의 객체에 이름, 나이, 키를 담았다!
		
		// 출력
		// xxx님의 나이는 xx살이고 , 키는 xxxcm입니다.
		System.out.printf("%s님의 나이는 %d살이고, 키는 %.1fcm입니다.\n", hong.name, hong.age, hong.height);
		System.out.printf("%s님의 나이는 %d살이고, 키는 %.1fcm입니다.\n", ddong.name, ddong.age, ddong.height);
		
		// => 객체지향언어가 뭔지, 객채가 뭔지, 객제치향 프로그램이란 뭔지,
		// 추상화 과정을 통해 선정된 속성들을 가지고 어떤식으로 클래스를 만들면 되는지
		// 클래스를 만들었을 때 어떤식으로 객체를 찍어내면 되는지
		
		// 이런식으로 직접 접근이 가능하면 => 외부에서 무분별하게 직접 접근을 통해서 값을 변질시킨다거나, 알아낼 수 있음. (보안에 취약해진다)
		// => 캡슐화 작업을 해야한다!
		// => 객체지향 설계 원칙 중 정보 은닉이 있다. 정보은닉 중 하나가 캡슐화!
		
		
		
		
	}

}
